openapi: "3.0.3"
info:
  title: "Documentación de la App de Reservas de Cabañas - Cabañas"
  description: "API para la administración y consulta de cabañas disponibles para hospedaje."
  version: "1.0.0"

servers:
  - url: http://localhost:8080/api/users

paths:
  /api/users:
    get:
      summary: Obtener lista de usuarios
      tags: [Users]
      parameters:
        - in: query
          name: email
          schema: { type: string }
        - in: query
          name: country
          schema: { type: string }
        - in: query
          name: state
          schema: { type: string }
        - in: query
          name: city
          schema: { type: string }
        - in: query
          name: street
          schema: { type: string }
        - in: query
          name: role
          schema: { type: string }
        - in: query
          name: reservations
          schema: { type: string, enum: [asc, desc] }
        - in: query
          name: createdAt
          schema: { type: string, format: date-time }
        - in: query
          name: sort
          schema: { type: string, enum: [asc, desc] }
        - in: query
          name: page
          schema: { type: integer, default: 1 }
        - in: query
          name: limit
          schema: { type: integer, default: 10 }
      responses:
        '200': { description: Lista de usuarios obtenida exitosamente. }
        '500': { description: Error interno del servidor. }

  /api/users/{id}:
    get:
      summary: Obtener usuario por ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Usuario obtenido exitosamente. }
        '404': { description: Usuario no encontrado. }
        '500': { description: Error interno del servidor. }

    put:
      summary: Actualizar usuario por ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [first_name, last_name, phone, address]
              properties:
                first_name: { type: string }
                last_name: { type: string }
                phone: { type: string }
                address:
                  type: object
                  required: [country, state, city, street, number]
                  properties:
                    country: { type: string }
                    state: { type: string }
                    city: { type: string }
                    street: { type: string }
                    number: { type: string }
      responses:
        '200': { description: Usuario actualizado con éxito. }
        '400': { description: Solicitud incorrecta. }
        '404': { description: Usuario no encontrado. }
        '500': { description: Error interno del servidor. }

    delete:
      summary: Eliminar usuario por ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Usuario eliminado con éxito. }
        '400': { description: Usuario con reservas activas. }
        '404': { description: Usuario no encontrado. }
        '500': { description: Error interno del servidor. }

  /api/users/image/{id}:
    patch:
      summary: Cambiar imagen de perfil del usuario
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200': { description: Imagen actualizada con éxito. }
        '400': { description: Imagen no enviada. }
        '404': { description: Usuario no encontrado. }
        '500': { description: Error interno del servidor. }

  /api/users/role/{id}:
    patch:
      summary: Cambiar rol del usuario
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [role]
              properties:
                role:
                  type: string
                  enum: [user, admin, developer]
      responses:
        '200': { description: Rol actualizado con éxito. }
        '400': { description: Rol inválido. }
        '404': { description: Usuario no encontrado. }
        '500': { description: Error interno del servidor. }

  /api/users/delete/all:
    delete:
      summary: Eliminar todos los usuarios
      tags: [Users]
      responses:
        '200': { description: Todos los usuarios eliminados con éxito. }
        '500': { description: Error interno del servidor. }